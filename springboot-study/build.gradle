plugins {
    id 'org.springframework.boot' version '2.5.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '16'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2020.0.3")
    set('testcontainersVersion', "1.15.3")
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-config-server'
//    implementation 'org.springframework.boot:spring-boot-starter-cache' // 사실 기본으로 있음
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
//    implementation 'org.springframework.cloud:spring-cloud-starter-vault-config'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Spring Configuration Processor
    // application.properties/yml 파일에 넣는 커스텀 설정의 자동완성, 도움말 등을 지원
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
}

dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}


compileJava {
    inputs.files(processResources)
}